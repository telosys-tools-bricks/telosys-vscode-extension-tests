// qsqdqsd
qsqdqsd
/* qsdfsdf
*/
//  qsdqsd
//  qsdqd

// { qsdqd }  { qsdqkj } qklsd qk [ qlskdj  { qds l}
// qd qksjdh qsjk 
// ( qsdkqksd )


[ qskdj qk ] 

qsdfsdf // qslkdjqskl
{ qsmdlk q }   { qlksd j }   

(smdlfkm) akaze 
"qsdqs  { qsq =  qsd  () d"  

while  if   for mqldk   return  return  lqksj dqs l  lj 

while qksdj l l  if for qlmd m while ml 



if qsdqsd

while qsdqsd


for lqskjd qk   


{ mqlsdk } mqsd qsmdlk
// qsjdqmsl
qsdqsd 